from subprocess import PIPE

from pytest import mark

from docker_cli._docker_insert import insert_dir_dockerfile
from docker_cli._image import Image

from .utils import generate_tag, rough_dockerfile_validity_check


@mark.dockerfiles
@mark.build
def test_insert_dockerfile():
    """Performs a rough validity check of the directory insert Dockerfile."""
    dockerfile = insert_dir_dockerfile(
        base="base",
        target_dir=".",
    )
    rough_dockerfile_validity_check(dockerfile=dockerfile)


@mark.images
@mark.build
def test_docker_insert(base_tag: str):
    """Tests the image generated by the directory insert Dockerfile."""
    img_tag = generate_tag("insert-dir")

    # Insert the contents of the dummy directory inside of this test directory into
    # the image.
    dockerfile = insert_dir_dockerfile(
        base=base_tag,
        source_dir="dummy_dir",
        target_dir="/dummy_dir",
    )

    image = Image.build(tag=img_tag, dockerfile_string=dockerfile, no_cache=True)

    # Test that the files in the dummy directory and subdirectories are present on the
    # image.
    image.run("test -f /dummy_dir/dummy_file.txt")
    image.run("test -f /dummy_dir/dummy_subdir/dummy_file.txt")
